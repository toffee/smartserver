- name: set version
  set_fact:
    pgadmin_version: "8.9"
  tags: [ 'update_notifier_config' ]
  
- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: 5050
    group: 5050
    mode: 0750
  with_items:
    - '{{ global_etc }}pgadmin'
    - '{{ global_lib }}pgadmin'

- name: copy config
  template:
    src: "templates/etc/pgadmin/{{item}}"
    dest: "{{ global_etc }}pgadmin/{{item}}"
    owner: 5050
    group: 5050
    mode: 0640
  with_items:
    - "servers.json"
  notify: "restart pgadmin"

- name: prepare published_ports
  set_fact:
    pgadmin_published_ports:  |
      [
        "5050:5050",
        {% if default_server_ipv6 is defined %}
          "[::]:5050:5050",
        {% endif %}
      ]
  tags: ['firewall_config']

- name: create podman container
  containers.podman.podman_container:
    name: pgadmin
    image: "dpage/pgadmin4:{{pgadmin_version}}"
    state: present
    security_opt:
      - label=disable
    env:
      PGADMIN_DEFAULT_EMAIL: "{{pgadmin_username}}"
      PGADMIN_DEFAULT_PASSWORD: "{{pgadmin_password}}"
      PGADMIN_LISTEN_PORT: "5050"
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: pgadmin
    network: "isolated"
    ip: "{{podman_pgadmin_ip}}"
    volumes:
      - '{{ global_etc }}pgadmin/servers.json:/pgadmin4/servers.json:z'
      - '{{ global_lib }}pgadmin:/var/lib/pgadmin:z'
    published_ports: "{{pgadmin_published_ports}}"
  register: "podman_container_state"
  notify: "restart pgadmin"

# ***** SERVICE CONFIGS *****
- name: handle systemd service
  vars:
    container_name: "pgadmin"
    container_changed: "{{podman_container_state.changed}}"
    container_after: ["postgres"]
  include_tasks: roles/container/shared/handle_podman_service.yml
  tags: ['systemd_watcher_config']

- name: add container name
  vars:
    host_name: "pgadmin"
    host_ip_address: "{{podman_pgadmin_ip}}"
  import_tasks: roles/_shared/add_to_hosts.yml

- name: allow service
  vars:
    service_name: "pgadmin"
    container_to_container_rules:
      - { saddr: "{{podman_pgadmin_ip}}", daddr: "{{podman_postgres_ip}}", protocol: "tcp", dport: "5432", comment: "pgadmin => pastgres" }
  include_tasks: roles/firewall/shared/allow_service_nftables.yml
  tags: ['firewall_config']
  when: "nftables_enabled"

- name: allow service
  vars:
    firewall_name: "pgadmin"
    firewall_rules:
      - "saddr {{podman_pgadmin_ip}} daddr {{podman_postgres_ip}}"
  include_tasks: roles/firewall/shared/allow_service.yml
  when: "not nftables_enabled"

# ***** FINALIZE *****
- name: register webui
  vars:
    name: "pgadmin"
    js_file: "templates/webui/pgadmin.js"
    icons: [ 'templates/webui/icons/pgadmin_logo.svg' ]
  import_tasks: roles/apache_webui/shared/add_webui.yml
  
- name: copy apache config
  vars:
    config_file: "templates/etc/apache2/_.ansible.conf.d/pgadmin.conf"
  import_tasks: roles/apache/shared/add_config.yml

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/pgadmin.conf"
  import_tasks: roles/fluentd/shared/add_config.yml
  tags: ['fluentd_config']
  when: "monitoring_enabled"

- name: register update notifier
  vars:
    name: "pgadmin"
    type: "docker"
    url: "https://www.pgadmin.org/news/"
    config: {
      repository: "dpage/pgadmin4",
      pattern: "^([0-9\\.]+)$"
    }
  import_tasks: roles/update_service/shared/add_software.yml

- name: trigger pgadmin handler
  vars:
    notify: "restart pgadmin"
    service: "pgadmin.service"
  import_tasks: roles/_shared/service_check.yml

