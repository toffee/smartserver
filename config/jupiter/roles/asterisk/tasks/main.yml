- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{ global_etc}}asterisk"
    - "{{ global_etc}}asterisk/modules.d"

- name: copy config
  template:
    src: "templates/etc/asterisk/{{item}}"
    dest: "{{ global_etc }}asterisk/{{item}}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "asterisk.conf"
    - "ccss.conf"
    - "cdr.conf"
    - "cdr_custom.conf"
    - "cel.conf"
    - "confbridge.conf"
    - "extensions.conf"
    - "features.conf"
    - "indications.conf"
    - "logger.conf"
    - "manager.conf"
    - "modules.conf"
    - "musiconhold.conf"
    - "pjsip.conf"
    - "pjsip_notify.conf"
    - "queues.conf"
    - "sip.conf"
    - "stasis.conf"
    - "voicemail.conf"

# manager.d folder
- name: check manager.d folder
  shell: "ls -1 config/jupiter/roles/asterisk/templates/etc/asterisk/manager.d"
  register: managerd_result
  changed_when: no

- name: copy manager.d folder
  copy:
    src: "templates/etc/asterisk/manager.d"
    dest: "{{global_etc}}/asterisk/manager.d"
    owner: root
    group: root
    mode: 0750
  with_items: "{{managerd_result.stdout_lines}}"

- name: build docker image
  vars:
    name: "asterisk"
    image_name: "custom_asterisk"
    image_version: "{{alpine_version}}"
    files:
      - "{{config_path}}roles/asterisk/templates/container/Dockerfile"
  import_tasks: roles/container/tasks/build_docker_image.yml
  
- name: create docker container
  docker_container:
    name: asterisk
    image: "custom_asterisk:{{alpine_version}}"
    state: present
#    recreate: true
    env:
      TZ: "{{timezone}}"
    network_mode: host
    log_driver: journald
    log_options:
      tag: asterisk
    volumes:
      - '{{ global_etc }}asterisk/:/etc/asterisk/:z'
    exposed_ports:
      - "5060/udp"
  notify: "restart asterisk"

  # ***** FINALIZE *****
- name: allow asterisk service
  vars:
    name: "asterisk"
    rule: "proto udp dport 5060"
  import_tasks: roles/firewall/tasks/allow_service.yml
  tags: [ 'firewall_config' ]
  
- name: create systemd service
  vars:
    container_name: "asterisk"
  import_tasks: roles/container/tasks/add_docker_service.yml

- name: trigger asterisk handler
  vars:
    notify: "restart asterisk"
    service: "asterisk.service"
  import_tasks: roles/_shared/tasks/service_check.yml

