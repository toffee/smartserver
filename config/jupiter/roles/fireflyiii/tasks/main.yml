- name: set version
  set_fact:
    fireflyiii_core_version: 'version-6.1.19'
    fireflyiii_importer_version: 'version-1.5.4'
  tags: [ 'update_notifier_config' ]

- name: prepare needed folder
  file:
    path: '{{item.path}}'
    state: directory
    owner: "{{item.user}}"
    group: "{{item.group}}"
    mode: "{{item.mode}}"
  with_items:
    - { user: "33", group: "33", mode: "u=rwx,g=rx,o=", path: "{{global_lib}}fireflyiii" }
    - { user: "33", group: "33", mode: "u=rwx,g=rx,o=", path: "{{global_lib}}fireflyiii/upload" }
    - { user: "33", group: "33", mode: "u=rwx,g=rx,o=", path: "{{global_lib}}fireflyiii/configurations" }
    - { user: "33", group: "33", mode: "u=rwx,g=rx,o=", path: "{{global_log}}fireflyiii/" }
  notify:
    - restart fireflyiii-core
    - restart fireflyiii-importer

- name: check for vault configuration directory
  find:
    paths: "{{config_path}}vault/fireflyiii/"
  delegate_to: 127.0.0.1
  register: vault_key_directory

- name: copy configuration directory
  copy:
    src: "{{config_path}}vault/fireflyiii/"
    dest: "{{global_lib}}fireflyiii/configurations/"
    decrypt: yes
    owner: 33
    group: 33
    mode: 0750
  when: "vault_key_directory.matched > 0"
  notify:
    - restart fireflyiii-core
    - restart fireflyiii-importer

- name: create container service
  vars:
    container_name: "fireflyiii-core"
    container_image: "fireflyiii/core:{{fireflyiii_core_version}}"
    container_network: "isolated"
    container_ip: "{{podman_fireflyiii_core_ip}}"
    container_exposed_ports:
      - "8080"
    container_env:
      TZ: "{{timezone}}"
      APP_KEY: "{{fireflyiii_api_key}}"
      DB_HOST: "mysql"
      DB_PORT: "3306"
      DB_CONNECTION: "mysql"
      DB_DATABASE: "fireflyiii"
      DB_USERNAME: "{{fireflyiii_mysql_username}}"
      DB_PASSWORD: "{{fireflyiii_mysql_password}}"
      TRUSTED_PROXIES: "**"
      MAIL_MAILER: "smtp"
      MAIL_HOST: "{{mailserver_host}}"
      MAIL_PORT: "{{mailserver_port}}"
      MAIL_ENCRYPTION: "tls"
      MAIL_USERNAME: "{{mailserver_username}}"
      MAIL_PASSWORD: "{{mailserver_password}}"
      MAIL_FROM: "{{root_email}}"
    container_volumes: 
      - '{{global_lib}}fireflyiii/upload:/var/www/html/storage/upload'
      - '{{global_log}}fireflyiii:/var/www/html/storage/logs'
    container_after: [ "mysql" ]
    container_readyness: { "type": "port_check", "ip": "{{podman_fireflyiii_core_ip}}", "port": "8080" }
  include_tasks: roles/container/shared/create_podman_service.yml
  tags: ['podman_container','systemd_watcher_config','systemd_service_config']

- name: create container service
  vars:
    container_name: "fireflyiii-importer"
    container_image: "fireflyiii/data-importer:{{fireflyiii_importer_version}}"
    container_network: "isolated"
    container_ip: "{{podman_fireflyiii_importer_ip}}"
    container_exposed_ports:
      - "8080"
    container_env:
      TZ: "{{timezone}}"
      IMPORT_DIR_ALLOWLIST: "/var/www/html/storage/configurations"
      FIREFLY_III_URL: "http://{{podman_fireflyiii_core_ip}}:8080"
      VANITY_URL: "https://fireflyiii.{{server_domain}}"
#      FIREFLY_III_CLIENT_ID: "{{vault_fireflyiii_client_id}}"
      FIREFLY_III_ACCESS_TOKEN: "{{fireflyiii_pat}}"
      TRUSTED_PROXIES: "**"
      NORDIGEN_ID: "{{fireflyiii_nordigen_id}}"
      NORDIGEN_KEY: "{{fireflyiii_nordigen_key}}"
      NORDIGEN_SANDBOX: "false"
      ENABLE_MAIL_REPORT: "true"
      MAIL_DESTINATION: "{{fireflyii_importer_email}}"
      MAIL_MAILER: "smtp"
      MAIL_HOST: "{{mailserver_host}}"
      MAIL_PORT: "{{mailserver_port}}"
      MAIL_ENCRYPTION: "tls"
      MAIL_USERNAME: "{{mailserver_username}}"
      MAIL_PASSWORD: "{{mailserver_password}}"
      MAIL_FROM_ADDRESS: "{{root_email}}"
    container_volumes: 
      - '{{global_lib}}fireflyiii/configurations:/var/www/html/storage/configurations'
      - '{{global_log}}fireflyiii:/var/www/html/storage/logs'
    container_after: [ "mysql", "fireflyiii-core" ]
    container_readyness: { "type": "port_check", "ip": "{{podman_fireflyiii_importer_ip}}", "port": "8080" }
  include_tasks: roles/container/shared/create_podman_service.yml
  tags: ['podman_container','systemd_watcher_config','systemd_service_config']

- name: allow service
  vars:
    service_name: "fireflyiii"
    container_to_container_rules:
      - { saddr: "{{podman_fireflyiii_core_ip}}", daddr: "{{podman_mysql_ip}}", protocol: "tcp", dport: "3306", comment: "fireflyiii-core => mysql" }
      - { saddr: "{{podman_fireflyiii_importer_ip}}", daddr: "{{podman_mysql_ip}}", protocol: "tcp", dport: "3306", comment: "fireflyiii-importer => mysql" }
      - { saddr: "{{podman_fireflyiii_importer_ip}}", daddr: "{{podman_fireflyiii_core_ip}}", protocol: "tcp", dport: "8080", comment: "fireflyiii-importer => fireflyiii-core" }
    container_to_outside_rules:
      - { saddr: "{{podman_fireflyiii_importer_ip}}", protocol: "tcp", dport: "443", oif: "{{default_network_interface}}", comment: "fireflyiii-importer => external bankaccountdata.gocardless.com provider" }
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: add container fireflyiii-core name
  vars:
    host_name: "fireflyiii"
    host_ip_address: "{{podman_fireflyiii_core_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

- name: add container fireflyiii-importer name
  vars:
    host_name: "fireflyiii-importer"
    host_ip_address: "{{podman_fireflyiii_importer_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

# ***** MYSQL DATABASE ****
- name: create database
  vars:
    database: "fireflyiii"
    username: "{{fireflyiii_mysql_username}}"
    password: "{{fireflyiii_mysql_password}}"
    backup: yes
  include_tasks: roles/mysql/shared/add_database.yml
  
# ***** CRONJOB FOR IMPORT ****
- name: create cron job
  vars:
    name: "Firefly III Importer cron job"
    cmd: "podman exec --user www-data fireflyiii-importer sh -c \"php artisan importer:auto-import /var/www/html/storage/configurations/; exit 0\""
    group: "fireflyiii"
    hour: "8"
    minute: "30"
  include_tasks: roles/cron/shared/add_cronjob.yml
  tags: ['cron_job']

# ***** FINALIZE *****
- name: register webui
  vars:
    name: "fireflyiii"
    js_file: "templates/webui/fireflyiii.js"
    icons: [ 'templates/webui/icons/fireflyiii_logo.svg', 'templates/webui/icons/financial_logo.svg' ]
  include_tasks: roles/apache_webui/shared/add_webui.yml
  tags: ['apache_webui_config']

- name: copy apache config
  vars:
    config_file: "templates/etc/apache2/_.ansible.conf.d/fireflyiii.conf"
  include_tasks: roles/apache/shared/add_config.yml
 
- name: copy apache vhost
  vars:
    sub_domain: "fireflyiii"
    usergroup: "user"
    include: "templates/etc/apache2/_.ansible.vhost.d/fireflyiii.inc"
  include_tasks: roles/apache/shared/add_vhost.yml
 
- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/fireflyiii.conf"
  include_tasks: roles/fluentd/shared/add_config.yml
  tags: ['fluentd_config']
  when: "monitoring_enabled"

- name: register update notifier
  vars:
    name: "fireflyiii-core"
    type: "docker"
    url: "https://github.com/firefly-iii/firefly-iii/releases"
    config: {
      repository: "fireflyiii/core",
      pattern: "^version-([0-9\\.]+)$"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"
  
- name: register update notifier
  vars:
    name: "fireflyiii-importer"
    type: "docker"
    url: "https://github.com/firefly-iii/data-importer/releases"
    config: {
      repository: "fireflyiii/data-importer",
      pattern: "^version-([0-9\\.]+)$"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"

