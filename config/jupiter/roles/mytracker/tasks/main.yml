- name: set mytracker version
  set_fact:
    mytracker_version: 'unknown'
  tags: [ 'update_notifier_configs' ]
  
- name: prepare needed folder
  file:
    path: "{{item}}"
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{global_etc}}mytracker/"

- name: build docker image
  vars:
    name: "mytracker"
    image_name: "custom_mytracker"
    image_version: "{{alpine_version}}-{{mytracker_version}}"
    files:
      - "{{config_path}}/roles/mytracker/templates/container/Dockerfile"
  import_tasks: roles/container/shared/build_docker_image.yml

- name: create docker container
  docker_container:
    name: mytracker
    image: "custom_mytracker:{{alpine_version}}-{{mytracker_version}}"
    state: present
#    recreate: true
    env:
      TZ: "{{timezone}}"
      FLASK_ENV: "development"
      FLASK_DEBUG : "False"
    log_driver: journald
    log_options:
      tag: mytracker
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "isolated"
        ipv4_address: "{{docker_mytracker_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{global_lib}}mytracker/:/var/lib/mytracker:z'
    published_ports:
      - "5000:5000"
  notify: "restart mytracker"

- name: allow mytracker service
  vars:
    name: "mytracker"
    rules:
      - "saddr {{docker_mytracker_ip}} daddr {{docker_mosquitto_ip}}"
  import_tasks: roles/firewall/shared/allow_service.yml
  tags: [ 'firewall_config' ]

- name: add container name
  vars:
    host_name: "mytracker"
    host_ip_address: "{{docker_mytracker_ip}}"
  import_tasks: roles/_shared/add_to_hosts.yml

# ***** FINALIZE *****
- name: register webui
  vars:
    name: "mytracker"
    js_file: "templates/webui/mytracker.js"
    icons: [ 'templates/webui/icons/mytracker_logo.svg' ]
  import_tasks: roles/apache_webui/shared/add_webui.yml

- name: copy apache config
  vars:
    config_file: "templates/etc/apache2/_.ansible.conf.d/mytracker.conf"
  import_tasks: roles/apache/shared/add_config.yml
 
#- name: copy fluentd config
#  vars:
#    config_file: "templates/etc/fluent/_.ansible.d/mytracker.conf"
#  import_tasks: roles/fluentd/shared/add_config.yml
      
- name: create systemd service
  vars:
    container_name: "mytracker"
    container_after: [ "mosquitto" ]
  import_tasks: roles/container/shared/add_docker_service.yml

- name: trigger mytracker handler
  vars:
    notify: "restart mytracker"
    service: "mytracker.service"
  import_tasks: roles/_shared/service_check.yml
