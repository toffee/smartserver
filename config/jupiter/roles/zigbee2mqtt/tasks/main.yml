- name: set zigbee2mqtt version
  set_fact:
    zigbee2mqtt_version: "1.35.2"
 
- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{global_etc}}zigbee2mqtt"
    - "{{global_log}}zigbee2mqtt"

- name: copy config
  template:
    src: "templates/etc/zigbee2mqtt/{{item}}"
    dest: "{{ global_etc }}zigbee2mqtt/{{item}}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "configuration.yaml"
    - "devices.yaml"
    - "groups.yaml"

- name: build docker image
  vars:
    name: "zigbee2mqtt"
    image_name: "custom_zigbee2mqtt"
    image_version: "{{zigbee2mqtt_version}}"
    files:
      - "{{config_path}}roles/zigbee2mqtt/templates/container/Dockerfile"
  import_tasks: roles/container/shared/build_docker_image.yml

- name: create docker container
  docker_container:
    name: zigbee2mqtt
    image: "custom_zigbee2mqtt:{{zigbee2mqtt_version}}"
    state: present
#    recreate: true
    env:
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: zigbee2mqtt
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "isolated"
        ipv4_address: "{{docker_zigbee2mqtt_ip}}"
    networks_cli_compatible: yes 
    volumes:
      - '{{global_etc}}zigbee2mqtt:/app/data:z'
      - '{{global_log}}zigbee2mqtt:/app/data/log:z'
    devices:
      - '/dev/ttyOpenHabZigbee:/dev/ttyOpenHabZigbee:rwm'
    published_ports:
      - "8084:8084"
  notify: "restart zigbee2mqtt"

- name: allow zigbee2mqtt service
  vars:
    name: "zigbee2mqtt"
    rules:
      - "saddr {{docker_zigbee2mqtt_ip}} daddr {{docker_mosquitto_ip}}"
      - "saddr {{docker_zigbee2mqtt_ip}} proto tcp dport 443"
  import_tasks: roles/firewall/shared/allow_service.yml
  tags: [ 'firewall_config' ]

- name: add container name
  vars:
    host_name: "zigbee2mqtt"
    host_ip_address: "{{docker_zigbee2mqtt_ip}}"
  import_tasks: roles/_shared/add_to_hosts.yml

  # ***** FINALIZE *****
- name: register webui
  vars:
    name: "zigbee2mqtt"
    js_file: "templates/webui/zigbee2mqtt.js"
    icons: [ 'templates/webui/icons/zigbee2mqtt_logo.svg' ]
  import_tasks: roles/apache_webui/shared/add_webui.yml

#This does not work - location in default vhost
#See: https://stackoverflow.com/questions/11468154/tunneling-secure-websocket-connections-with-apache
- name: copy apache config
  vars:
    config_file: "templates/etc/apache2/_.ansible.conf.d/zigbee2mqtt.conf"
  import_tasks: roles/apache/shared/add_config.yml

#This works - new virtual host
- name: copy apache vhost
  vars:
    sub_domain: "zigbee2mqtt"
    usergroup: "user"
    include: "templates/etc/apache2/_.ansible.vhost.d/zigbee2mqtt.inc"
  import_tasks: roles/apache/shared/add_vhost.yml

- name: create systemd service
  vars:
    container_name: "zigbee2mqtt"
    container_after: [ "mosquitto" ] 
  import_tasks: roles/container/shared/add_docker_service.yml

- name: register update notifier
  vars:
    name: "zigbee2mqtt"
    type: "github"
    url: "https://github.com/Koenkk/zigbee2mqtt/releases"
    config: { 
      project: "Koenkk/zigbee2mqtt", 
      pattern: "^([0-9\\.]+)$",
      version: "{{zigbee2mqtt_version}}" 
    }
  import_tasks: roles/update_service/shared/add_software.yml  

- name: trigger zigbee2mqtt handler
  vars:
    notify: "restart zigbee2mqtt"
    service: "zigbee2mqtt.service"
  import_tasks: roles/_shared/service_check.yml

