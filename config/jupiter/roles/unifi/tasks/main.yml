- name: ensure user and group exists
  vars:
    user: { name: "unifi", system: true, home: "{{global_etc}}unifi" }
    group: { name: "unifi", system: true }
  import_tasks: roles/user/shared/add_system_user.yml

- name: set unifi version
  set_fact:
    unifi_version: "7.4.162-ls200"
    unifi_uid: "{{system_users['unifi'].id}}"
    unifi_user: "{{system_users['unifi'].name}}"
    unifi_gid: "{{system_groups['unifi'].id}}"
    unifi_group: "{{system_groups['unifi'].name}}"
  tags: [ 'update_notifier_configs' ]

- name: prepare needed config folder
  file:
    path:  "{{item}}"
    state: directory
    owner: "{{unifi_user}}"
    group: "{{unifi_group}}"
    mode: 0750
  with_items:
    - "{{global_etc}}unifi"

- name: check started docker
  systemd:
    name: docker
    state: started

- name: create docker container
  docker_container:
    name: unifi
    image: "linuxserver/unifi-controller:{{unifi_version}}"
    state: present
    env:
      TZ: "{{timezone}}"
      PUID: "{{unifi_uid}}"
      PGID: "{{unifi_gid}}"
      MEM_LIMIT: "1024"
    log_driver: journald
    log_options:
      tag: unifi
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "isolated"
        ipv4_address: "{{docker_unifi_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{global_etc}}unifi/:/config:z'
    published_ports:
      - "3478:3478/udp"
      - "10001:10001/udp"  
      - "28080:8080"
      - "28443:8443"
  notify: "restart unifi"

- name: allow unifi service
  vars:
    name: "unifi"
    rules:      
      - "saddr {{docker_unifi_ip}} proto tcp dport 443"
  import_tasks: roles/firewall/shared/allow_service.yml
  tags: [ 'firewall_config' ]

- name: add container name
  vars:
    host_name: "unifi"
    host_ip_address: "{{docker_unifi_ip}}"
  import_tasks: roles/_shared/add_to_hosts.yml
  
# ***** FINALIZE *****    
- name: register webui
  vars:
    name: "unifi"
    js_file: "templates/webui/unifi.js"
    i18n_files: [ { language: "de", file: "templates/webui/unifi.de.json" } ]
    icons: [ 'templates/webui/icons/unifi_logo.svg' ]
  import_tasks: roles/apache_webui/shared/add_webui.yml

- name: copy apache vhost
  vars:
    sub_domain: "unifi"
    usergroup: "admin"
    include: "templates/etc/apache2/_.ansible.vhost.d/unifi.inc"
  import_tasks: roles/apache/shared/add_vhost.yml

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/unifi.conf"
  import_tasks: roles/fluentd/shared/add_config.yml
    
- name: create systemd service
  vars:
    container_name: "unifi"
  import_tasks: roles/container/shared/add_docker_service.yml
  
- name: register service watcher
  vars:
    name: "unifi"
  import_tasks: roles/systemd_watcher/shared/add_watcher.yml

- name: register unifi update notifier
  vars:
    name: "unifi"
    type: "docker"
    url: "https://github.com/linuxserver/docker-unifi-controller/releases"
    config: {
      repository: "linuxserver/unifi-controller",
      pattern: "^([0-9\\.]+)-ls([0-9]+)$"
    }
  import_tasks: roles/update_service/shared/add_software.yml

- name: trigger unifi handler
  vars:
    notify: "restart unifi"
    service: "unifi.service"
  import_tasks: roles/_shared/service_check.yml

