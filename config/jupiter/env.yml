# **** for all available options check config/default.yml ****

timezone:                         "Europe/Bucharest"
location:                         "46.757746,23.589810"     # latitude / longitude
language:                         "en"
country:                          "RO"
region:                           ""                        # => https://www.openhab.org/docs/configuration/actions.html#ephemeris

root_email:                       "home@toffee.ro"

server_name:                      "jupiter"
server_domain:                    "jupiter.toffee.ro"

ssl_certificate:                  "letsencrypt"              # selfsigned, letsencrypt

production_ip:                    "192.168.120.5"
staging_ip:                       "192.168.56.5"

#server_ipv6: { "optional": yes },                           # "fde7:1250:3eaf:10:7285:c2ff:fef3:8a30" your server ipv6
#server_network_ipv6: { "optional": "{{server_ipv6 is not defined}}" }, # "fde7:1250:3eaf::/48" your networkmask for ipv6
#server_gateway_ipv6: { "optional": "{{server_ipv6 is not defined}}" }, # "fe80::3895:1ff:fe6c:4b01" your gateway for ipv6

#intern_networks: { "default": [ "{{default_server_network}}" ] }, # e.g. intern ipv4 & ipv6 address ranges
#public_networks: { "default": [] },                         # e.g. public ipv6 address ranges
#trusted_networks: { "default": [] },                        # additional ipv4 & ipv6 networks allowed to connect the server

dns_type:                           "pihole"
dns_overrides:
  - {ip: 46.102.235.226, custom_dns: "toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "mail.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "www.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "ftp.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "alina.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "www.alina.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "salvadora.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "www.salvadora.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "daniel.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "www.daniel.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "cpanel.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "whm.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "webmail.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "webdisk.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "photos.toffee.ro"}
  - {ip: 46.102.235.226, custom_dns: "www.photos.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "alertmanager.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-alertmanager.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-fireflyiii.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-ghostfolio.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-grafana.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-influxdb.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-librenms.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-libreoffice.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-netdata.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-nextcloud.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-openhab.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-prometheus.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-speedtest.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-unifi.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba-zigbee2mqtt.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ba.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "fireflyiii.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "ghostfolio.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "grafana.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "influxdb.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "librenms.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "libreoffice.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "netdata.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "nextcloud.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "openhab.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "prometheus.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "speedtest.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "unifi.jupiter.toffee.ro"}
  - {ip: 192.168.120.5, custom_dns: "zigbee2mqtt.jupiter.toffee.ro"}
dns_default_domain:                 "toffee.ro"

dhcp_type:                          "pihole"
dhcp_range_start:                   "{{default_server_subnet}}.151"
dhcp_range_end:                     "{{default_server_subnet}}.200"
dhcp_reservations:
  - { mac: E4:5F:01:4D:AB:D4, ip: 192.168.120.1, hostname:  terminus }
  - { mac: 90:F6:52:20:0B:12, ip: 192.168.120.2, hostname:  terminus-switch }
  - { mac: 50:D4:F7:A6:1E:9A, ip: 192.168.120.3, hostname:  switch }
  - { mac: 00:11:32:36:A2:0F, ip: 192.168.120.4, hostname:  ds, custom_dns: ["cam", "chat", "drive", "file", "note", "photo", "video"]}
  - { mac: A8:A1:59:85:E0:C2, ip: 192.168.120.5, hostname:  jupiter }
  - { mac: F4:92:BF:AC:A3:E8, ip: 192.168.120.6, hostname:  ap-groundfloor }
  - { mac: F4:92:BF:AC:49:98, ip: 192.168.120.7, hostname:  ap-firstfloor }
  - { mac: D0:21:F9:FF:6D:D4, ip: 192.168.120.8, hostname:  ap-outdoor }
  - { mac: E8:DE:27:C6:E0:22, ip: 192.168.120.9, hostname:  tl-sg108e }
  - { mac: 00:00:54:FF:D4:B8, ip: 192.168.120.10, hostname:  lares }
  - { mac: 00:0F:C9:1C:CD:E8, ip: 192.168.120.11, hostname:  tablet-entrance }
  - { mac: 00:90:A9:83:25:A7, ip: 192.168.120.12, hostname:  mybook }
  - { mac: F4:EC:38:FD:B1:90, ip: 192.168.120.20, hostname:  securitas }
  - { mac: 84:9A:40:A6:85:83, ip: 192.168.120.51, hostname:  cam01 }
  - { mac: 84:9A:40:A6:85:86, ip: 192.168.120.52, hostname:  cam02 }
  - { mac: 84:9A:40:A6:85:AF, ip: 192.168.120.53, hostname:  cam03 }
  - { mac: 84:9A:40:A6:85:78, ip: 192.168.120.54, hostname:  cam04 }
  - { mac: B4:A3:82:09:2E:EF, ip: 192.168.120.55, hostname:  cam05 }
  - { mac: E8:AB:FA:19:7D:A7, ip: 192.168.120.57, hostname:  cam07 }
  - { mac: 98:DF:82:82:1A:3F, ip: 192.168.120.59, hostname:  gate }
  - { mac: BC:DD:C2:E7:9A:73, ip: 192.168.120.61, hostname:  tasmota-E79A73-6771 }
  - { mac: C8:2B:96:CF:F9:7F, ip: 192.168.120.62, hostname:  tasmota-CFF97F-6527 }
  - { mac: 40:F5:20:2E:81:CA, ip: 192.168.120.63, hostname:  nodemcu }
  - { mac: B0:4A:39:14:77:F4, ip: 192.168.120.64, hostname:  roborock }
  - { mac: 38:B4:D3:DB:F6:A3, ip: 192.168.120.65, hostname:  dishwasher }
  - { mac: 44:3E:07:23:4F:51, ip: 192.168.120.66, hostname:  oven }
  - { mac: BC:FF:4D:0F:F8:66, ip: 192.168.120.67, hostname:  weather }
  - { mac: 58:BF:25:DB:5A:66, ip: 192.168.120.68, hostname:  msgw }
  - { mac: 7C:87:CE:B6:10:19, ip: 192.168.120.69, hostname:  water-meter-filter }
  - { mac: E4:5F:01:10:4F:44, ip: 192.168.120.71, hostname:  moode-one }
  - { mac: B0:55:08:F8:C7:89, ip: 192.168.120.81, hostname:  tablet-huawei }
  - { mac: 54:3A:D6:0C:B7:2B, ip: 192.168.120.83, hostname:  tv-livingroom }
  - { mac: D4:AB:CD:58:BF:59, ip: 192.168.120.84, hostname:  tv-tudor-wireless }
  - { mac: 68:07:0A:25:E4:75, ip: 192.168.120.85, hostname:  tv-tudor-wired }
  - { mac: F8:4F:AD:A0:34:10, ip: 192.168.120.86, hostname:  tv-victor-wireless }
  - { mac: 68:07:0A:24:B3:B3, ip: 192.168.120.87, hostname:  tv-victor-wired }
  - { mac: d8:80:83:b0:06:2b, ip: 192.168.120.88, hostname:  printer-wireless }
  - { mac: b4:22:00:9d:bb:2c, ip: 192.168.120.89, hostname:  printer-wired }
  - { mac: f0:1d:bc:13:7e:6e, ip: 192.168.120.90, hostname:  xbox-wireless }
  - { mac: 6C:24:08:FE:06:77, ip: 192.168.120.100, hostname:  laptop-daniel-wired }
  - { mac: 2C:33:58:7B:B0:51, ip: 192.168.120.101, hostname:  laptop-daniel-wireless }
  - { mac: e8:11:32:c4:e8:18, ip: 192.168.120.102, hostname:  laptop-alina-wired }
  - { mac: dc:a9:71:2a:0c:ba, ip: 192.168.120.103, hostname:  laptop-alina-wireless }
  - { mac: 28:d2:44:9a:73:f5, ip: 192.168.120.104, hostname:  laptop-tudor-wired }
  - { mac: 90:48:9a:1c:2e:7b, ip: 192.168.120.105, hostname:  laptop-tudor-wireless }
  - { mac: 28:d2:44:8f:ec:0d, ip: 192.168.120.106, hostname:  laptop-victor-wired }
  - { mac: a0:a8:cd:0a:b1:d0, ip: 192.168.120.107, hostname:  laptop-victor-wireless }
  - { mac: FC:31:5D:4F:08:82, ip: 192.168.120.110, hostname:  phone-daniel }
  - { mac: CA:E5:8D:44:A9:87, ip: 192.168.120.111, hostname:  phone-alina }
  - { mac: 88:46:04:A9:5C:69, ip: 192.168.120.112, hostname:  phone-tudor }
  - { mac: 4A:9C:FA:2A:FE:BF, ip: 192.168.120.113, hostname:  phone-victor }
  - { mac: 08:F6:9C:59:92:6D, ip: 192.168.120.114, hostname:  phone-lili }
  - { mac: F0:99:B6:3D:B3:86, ip: 192.168.120.115, hostname:  phone-elena }
  - { mac: C8:A8:23:B5:0A:EC, ip: 192.168.120.120, hostname:  phone-gemini }
  - { mac: FC:D4:36:2A:AA:69, ip: 192.168.120.121, hostname:  phone-tudor-moto }
  - { mac: FC:D4:36:2A:A9:E2, ip: 192.168.120.122, hostname:  phone-victor-moto }

# pihole and dlna ip's should be part of a contiguous area at the end of your server network
# this contiguous area is configured as a subnet which is routed completely to a virtual macvlan bridge interface and is not usable for other device ip's anymore
pihole_ip:                          "{{default_server_subnet}}.250"                     # pihole ip address from same network as your server ip
#pihole_ipv6:    { "optional": yes },                                                   # pihole ipv6 address from same network as your server ip
#pihole_whitelist_domains: { "default": [ "www.googleadservices.com", "analytics.google.com", "clickserve.dartsearch.net", "ad.doubleclick.net" ] }, # domains are needed to use google search results
#pihole_addlist_urls: { "default": [ "https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts", "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-only/hosts", "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/gambling-only/hosts" ] },

# default is None, and minidlna will not be installed
#dlna_ip:                          "{{default_server_subnet}}.251"                      # dlna ip address from same network as your server ip
#dlna_ipv6:      { "optional": yes },                                                   # dlna ipv6 address from same network as your server ip
dns_forward_ip_addresses:         [ "{{default_server_gateway}}", "8.8.8.8", "8.8.4.4" ]

fping_test_hosts:                 [ "{{router_ip}}", "{{switch_ip}}", "{{ds_ip}}", "{{ap1_ip}}", "{{ap2_ip}}", "{{lares_ip}}", "{{securitas_ip}}", "{{weather_ip}}" ]

# used in main role 'apache' and can be an empty array []
authenticated_ip_addresses:       [ "{{wall_mounted_tablet_ip}}", "{{daniel_phone_ip}}", "{{vpn_mobile_subnet}}.11" ] #, "{{huawei_tablet_ip}}", "{{vpn_mobile_subnet}}.12" ] # apache access always allowed

public_domain:                    "tofans.go.ro"
default_isp:                      { org: ["RCS & RDS Residential"] } # is used to detect a fallback internet connection in system_service
    
# used in generic optional role 'wireguard_mobile'
mobile_vpn_internal_port:         "51820" # the port, used on your server
mobile_vpn_public_port:           "51820" # the public port, reachable from outside. (e.g. forwarded port on your dsl router)
mobile_vpn_public_domain:         "tofans.go.ro"
# to complete the setup you have to configure port forwarding on your internet router from the public port to this internal port

cloud_vpn: {                              # used in generic optional role 'wirguard_cloud'
    name: "peer1",
    interface: { address: "{{vpn_cloud_subnet}}.0.1", port: "51829", network: "{{vpn_cloud_subnet}}.1.0/24" },
    peers: {
#        peer2: { address: "{{vpn_cloud_subnet}}.0.2", port: "51829", network: "{{vpn_cloud_subnet}}.2.0/24", host: "public.peer2.com", "notification_email": "test@peer2.com" },
#        peer3: { address: "{{vpn_cloud_subnet}}.0.3", port: "51829", network: "{{vpn_cloud_subnet}}.3.0/24", host: "public.peer3.com", "notification_email": "test@peer3.com" }
    }
}

userdata: {
    daniel: { 
        name: "Olivian Daniel Tofan", 
        email: "daniel@toffee.ro",
        groups: [ "admin", "user" ], 
        telegram_bot: "home",    # used by openhab => reference to bot key in vault.yml
        phone_device: {                   # optional. will be used by device_ping role
          ip: "{{daniel_phone_ip}}", 
          timeout: 60 
        },
        openhab: {                        # used by openhab => reference to bot key in vault.yml
            state_item: "pOther_Presence_Daniel_State",
            notification_config: [ "telegram", "telegram:telegramBot:home" ],
        },
        vpn_gates: {                      # optional. will be used by wireguard_mobile role
          "phone": "{{vpn_mobile_subnet}}.11", 
          "laptop": "{{vpn_mobile_subnet}}.12" 
        },
        media_dir: {
          "test_media": "/"               # nextcloud user folder which is available via dlna (can be any nextcloud subfolder)
        },
        sip_endpoints: {
          "gate": "Hikvision DS-KD8003IME modular door station",
          "daniel": "Daniel Tofan softphone"
        }
    },
    alina: {
        name: "Alina Tofan", 
        email: "alina@toffee.ro", 
        groups: [ "user" ],
        phone_device: { 
          ip: "{{alina_phone_ip}}", 
          timeout: 60 
        },
        openhab: {                        # used by openhab => reference to bot key in vault.yml
            state_item: "pOther_Presence_Alina_State",
            notification_config: [ "telegram", "telegram:telegramBot:home" ],
        },
        vpn_gates: { 
          "phone": "{{vpn_mobile_subnet}}.13",
          "laptop": "{{vpn_mobile_subnet}}.14" 
        },
        sip_endpoints: {
          "alina": "Alina Tofan softphone"
        }
    },
    tudor: {
        name: "Tudor Tofan", 
        email: "tudor@toffee.ro", 
        groups: [ "user" ],
        phone_device: { 
          ip: "{{tudor_phone_ip}}", 
          timeout: 60 
        },
        openhab: {                        # used by openhab => reference to bot key in vault.yml
            state_item: "pOther_Presence_Tudor_State",
            notification_config: [ "telegram", "telegram:telegramBot:home" ],
        },
        vpn_gates: { 
          "phone": "{{vpn_mobile_subnet}}.15",
          "laptop": "{{vpn_mobile_subnet}}.16" 
        },
        sip_endpoints: {
          "tudor": "Tudor Tofan softphone"
        }
    },
    victor: {
        name: "Victor Tofan", 
        email: "victor@toffee.ro", 
        groups: [ "user" ],
        phone_device: { 
          ip: "{{victor_phone_ip}}", 
          timeout: 60 
        },
        openhab: {                        # used by openhab => reference to bot key in vault.yml
            state_item: "pOther_Presence_Victor_State",
            notification_config: [ "telegram", "telegram:telegramBot:home" ],
        },
        vpn_gates: { 
          "phone": "{{vpn_mobile_subnet}}.17",
          "laptop": "{{vpn_mobile_subnet}}.18" 
        },
        sip_endpoints: {
          "victor": "Victor Tofan softphone"
        }
    },
    lili: {
        name: "Liliana Radu", 
        email: "lili@toffee.ro", 
        groups: [ "user" ],
        phone_device: { 
          ip: "{{lili_phone_ip}}", 
          timeout: 60 
        },
        vpn_gates: { 
          "phone": "{{vpn_mobile_subnet}}.20"
        }
    },
    costache: {
        name: "Costache Tofan", 
        email: "costache@toffee.ro", 
        groups: [ "user" ],
        vpn_gates: {
          "tablet": "{{vpn_mobile_subnet}}.21",
          "phone": "{{vpn_mobile_subnet}}.22"
        }
    }
}

update_service_software_check_email:    "home@toffee.ro"    # sends a notification email after each check, if new software is available 
update_service_system_check_email:      "home@toffee.ro"    # sends a notification email after each check, if new smartserver deployment updates are available
fireflyii_importer_email:               "home@toffee.ro"    # Firefly III data importer sends the results of the import

#speedtest_server_id: "49516" # Internet Nord GmbH
#trusted_networks: []

network_devices: [
    {
       host: "{{default_server_subnet}}.1",
       name: "terminus",
       snmp_method: "v2c",
       snmp_community_string: "public",
       type: "openwrt",
       #config: { roles: ["router"] }
       config: { roles: ["gateway"], features: [ "ipv6-to-hosts", "softflowd", "ddns" ]}
    },
    {
       host: "{{default_server_subnet}}.3",
       name: "Switch",
       snmp_method: "v2c",
       snmp_community_string: "public"
    },
    {
       host: "{{default_server_subnet}}.4",
       name: "ds",
       snmp_method: "v2c",
       snmp_community_string: "public"
    },
    {
       host: "{{default_server_subnet}}.6",
       name: "ap-groundfloor",
       snmp_method: "v2c",
       snmp_community_string: "public"
    },
    {
       host: "{{default_server_subnet}}.7",
       name: "ap-firstfloor",
       snmp_method: "v2c",
       snmp_community_string: "public"
    },
    {
       host: "{{default_server_subnet}}.8",
       name: "ap-outdoor",
       snmp_method: "v2c",
       snmp_community_string: "public"
    },
    {
       host: "{{default_server_subnet}}.20",
       name: "securitas",
       snmp_method: "v2c",
       snmp_community_string: "public",
       type: "openwrt",
       config: { roles: ["ap"] }
    }
]

camera_devices: [
    {
        uid: "cam01",
        name: "Camera 01", details: "Home entrance",
        ftp_upload_name: "cam01",
        external_url: "http://{{camera_01_ip}}",
        snapshot_url: "http://{{camera_01_ip}}/ISAPI/Streaming/channels/102/picture", snapshot_username: "{{ vault_camera_01_username }}", snapshot_password: "{{ vault_camera_01_password }}"
    },
    {
        uid: "cam02",
        name: "Camera 02", details: "Garden fence",
        ftp_upload_name: "cam02",
        external_url: "http://{{camera_02_ip}}",
        snapshot_url: "http://{{camera_02_ip}}/ISAPI/Streaming/channels/102/picture", snapshot_username: "{{ vault_camera_02_username }}", snapshot_password: "{{ vault_camera_02_password }}"
    },
    {
        uid: "cam03",
        name: "Camera 03", details: "Garden",
        ftp_upload_name: "cam03",
        external_url: "http://{{camera_03_ip}}",
        snapshot_url: "http://{{camera_03_ip}}/ISAPI/Streaming/channels/102/picture", snapshot_username: "{{ vault_camera_03_username }}", snapshot_password: "{{ vault_camera_03_password }}"
    },
    {
        uid: "cam04",
        name: "Camera 04", details: "Gate entrance",
        ftp_upload_name: "cam04",
        external_url: "http://{{camera_04_ip}}",
        snapshot_url: "http://{{camera_04_ip}}/ISAPI/Streaming/channels/102/picture", snapshot_username: "{{ vault_camera_04_username }}", snapshot_password: "{{ vault_camera_04_password }}"
    }
]

traffic_blocker:                    "yes"
netflow_incoming_traffic: [
    { target: "{{production_ip}}:51820", name: "wireguard", allowed: { wireguard_peers: [ "check" ] } }
]

netflow_collector:                  "yes"

#traffic_blocker: { "default": yes },                        # enabled or disabled automatic ip blocking based on several decissions (additionally there must be a propper configured 'netflow_incoming_traffic' variable)
# 1. if suspicious traffic arrives the apache webserver => which traffic, can be configured in the variable 'netflow_incoming_traffic' and the attribute 'log'
# 2. if unexcpected traffic arrives the network  => which traffic, can be configured  in the variable 'netflow_incoming_traffic' and the attribute 'allowed'
#"netflow_collector": { "default": no },                       # enable netflow collector in system_service
#netflow_incoming_traffic: { "default": [] },                # from internet expected and allowed traffic, (used to detect netflow traffic direction and for traffic blocker to decide which traffic is suspicious)
# *** EXAMPLE ***
# {
#   { target: "{{production_ip}}:80", name: "http", allowed: { hostname: [ ".+\\\\.internetnord\\\\.de", ".+letsencrypt\\\\.org" ] }, log="apache" }, # Letsencrypt, CLOUD PING Test
#   { target: "{{production_ip}}:10114", name: "alexa api", allowed: { org: [ "AWS EC2 .+" ] }, log="apache" }, # ALEXA
#   { target: "{{production_ip}}:51820", name: "wireguard", allowed: { wireguard_peers: [ "check" ] } }, # system check for connected wireguard peers
#   { target: "{{production_ip}}:456", name: "test", allowed: { ip: [ "185\\\\.89\\\\.36\\\\.[0-9]{1-3}" ] } }, # Fixed IP range test
# }
#
# *** Attibute Explanation ***
# 'logs' => "apache" means, traffic to this 'target' is additionally collected and analysed from apache logs
# 'allowed' => various regexes agains hostnames, org (ISP) or ip to mark traffic as normal. Type 'wireguard_peers' means the traffic ip is compared with active wireguard endpoints
# 'name' is just used as an identifier
# 'target' is a combination of the target ip and port number

# ****** OPTIONAL VARIABLES ******
# variables are optional and only necessary if they are referenced in one of the optional roles or configurations
# 
# openhab (external config) - used in custom external openhab config repository
# custom role 'apache_proxy' - used in custom role 'apache_proxy'
router_ip:                          "{{default_server_subnet}}.1"
switch_ip:                          "{{default_server_subnet}}.3"
ds_ip:                              "{{default_server_subnet}}.4"
ap1_ip:                             "{{default_server_subnet}}.6"
ap2_ip:                             "{{default_server_subnet}}.7"
lares_ip:                           "{{default_server_subnet}}.10"
wall_mounted_tablet_ip:             "{{default_server_subnet}}.11"      # {{authenticated_ip_addresses}}
securitas_ip:                       "{{default_server_subnet}}.20"
camera_01_ip:                       "{{default_server_subnet}}.51"
camera_02_ip:                       "{{default_server_subnet}}.52"
camera_03_ip:                       "{{default_server_subnet}}.53"
camera_04_ip:                       "{{default_server_subnet}}.54"
camera_07_ip:                       "{{default_server_subnet}}.57"
camera_09_ip:                       "{{default_server_subnet}}.59"
nodemcu_ip:                         "{{default_server_subnet}}.63"
roborock_ip:                        "{{default_server_subnet}}.64"
dishwasher_ip:                      "{{default_server_subnet}}.65"
oven_ip:                            "{{default_server_subnet}}.66"
weather_ip:                         "{{default_server_subnet}}.67"
moode_01_ip:                        "{{default_server_subnet}}.71"
moode_02_ip:                        "{{default_server_subnet}}.72"
huawei_tablet_ip:                   "{{default_server_subnet}}.81"      # {{authenticated_ip_addresses}}
huawei_tablet_wireless_ip:          "{{default_server_subnet}}.82"      # {{authenticated_ip_addresses}}
livingroom_tv_mac:                  "54:3a:d6:0c:b7:2b"
livingroom_tv_ip:                   "{{default_server_subnet}}.83"      # {{authenticated_ip_addresses}}
livingroom_tv_wireless_ip:          "{{default_server_subnet}}.84"      # {{authenticated_ip_addresses}}
tudor_tv_mac:                       "68:07:0A:25:E4:75"
tudor_tv_ip:                        "{{default_server_subnet}}.85"      # {{authenticated_ip_addresses}}
tudor_tv_wireless_ip:               "{{default_server_subnet}}.86"      # {{authenticated_ip_addresses}}
victor_tv_mac:                      "68:07:0A:24:B3:B3"
victor_tv_ip:                       "{{default_server_subnet}}.87"      # {{authenticated_ip_addresses}}
victor_tv_wireless_ip:              "{{default_server_subnet}}.88"      # {{authenticated_ip_addresses}}
daniel_phone_ip:                    "{{default_server_subnet}}.110"     # {{authenticated_ip_addresses}}
alina_phone_ip:                     "{{default_server_subnet}}.111"
tudor_phone_ip:                     "{{default_server_subnet}}.112"
victor_phone_ip:                    "{{default_server_subnet}}.113"
lili_phone_ip:                      "{{default_server_subnet}}.114"
knx_gateway_ip:                     "{{default_server_subnet}}.10"    # openhab (external config)

# ********************************

