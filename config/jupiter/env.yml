# **** for all available options check config/default.yml ****

timezone:                         "Europe/Bucharest"
location:                         "46.757746,23.589810"     # latitude / longitude
language:                         "en"
country:                          "RO"
region:                           ""                        # => https://www.openhab.org/docs/configuration/actions.html#ephemeris

root_email:                       "home@toffee.ro"

server_name:                      "jupiter"
server_domain:                    "jupiter.toffee.ro"

ssl_certificate:                  "letsencrypt"              # selfsigned, letsencrypt

production_ip:                    "192.168.120.5"
staging_ip:                       "192.168.56.5"

#server_ipv6: { "optional": yes },                           # "fde7:1250:3eaf:10:7285:c2ff:fef3:8a30" your server ipv6
#server_network_ipv6: { "optional": "{{server_ipv6 is not defined}}" }, # "fde7:1250:3eaf::/48" your networkmask for ipv6
#server_gateway_ipv6: { "optional": "{{server_ipv6 is not defined}}" }, # "fe80::3895:1ff:fe6c:4b01" your gateway for ipv6

#intern_networks: { "default": [ "{{default_server_network}}" ] }, # e.g. intern ipv4 & ipv6 address ranges
#public_networks: { "default": [] },                         # e.g. public ipv6 address ranges
#trusted_networks: { "default": [] },                        # additional ipv4 & ipv6 networks allowed to connect the server

# pihole and dlna ip's should be part of a contiguous area at the end of your server network
# this contiguous area is configured as a subnet which is routed completely to a virtual macvlan bridge interface and is not usable for other device ip's anymore
pihole_ip:                        "{{default_server_subnet}}.250"                       # pihole ip address from same network as your server ip
#pihole_ipv6:    { "optional": yes },                                                   # pihole ipv6 address from same network as your server ip
#pihole_whitelist_domains: { "default": [ "www.googleadservices.com", "analytics.google.com", "clickserve.dartsearch.net", "ad.doubleclick.net" ] }, # domains are needed to use google search results
#pihole_addlist_urls: { "default": [ "https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts", "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-only/hosts", "https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/gambling-only/hosts" ] },


# default is None, and minidlna will not be installed
#dlna_ip:                          "{{default_server_subnet}}.251"                      # dlna ip address from same network as your server ip
#dlna_ipv6:      { "optional": yes },                                                   # dlna ipv6 address from same network as your server ip
dns_forward_ip_addresses:         [ "{{default_server_gateway}}", "8.8.8.8", "8.8.4.4" ]

fping_test_hosts:                 [ "{{router_ip}}", "{{switch_ip}}", "{{ds_ip}}", "{{ap1_ip}}", "{{ap2_ip}}", "{{lares_ip}}", "{{securitas_ip}}", "{{weather_ip}}" ]

# used in main role 'apache' and can be an empty array []
authenticated_ip_addresses:       [ "{{wall_mounted_tablet_ip}}" ] #, "{{huawei_tablet_ip}}", "{{daniel_phone_ip}}", "{{vpn_mobile_subnet}}.11", "{{vpn_mobile_subnet}}.12" ] # apache access always allowed

public_domain:                    "tofans.go.ro"
default_isp:                      { org: ["RCS & RDS Residential"] } # is used to detect a fallback internet connection in system_service
    
# used in generic optional role 'wireguard_mobile'
mobile_vpn_internal_port:         "51820" # the port, used on your server
mobile_vpn_public_port:           "51820" # the public port, reachable from outside. (e.g. forwarded port on your dsl router)
mobile_vpn_public_domain:         "tofans.go.ro"
# to complete the setup you have to configure port forwarding on your internet router from the public port to this internal port

cloud_vpn: {                              # used in generic optional role 'wirguard_cloud'
    name: "peer1",
    interface: { address: "{{vpn_cloud_subnet}}.0.1", port: "51829", network: "{{vpn_cloud_subnet}}.1.0/24" },
    peers: {
#        peer2: { address: "{{vpn_cloud_subnet}}.0.2", port: "51829", network: "{{vpn_cloud_subnet}}.2.0/24", host: "public.peer2.com", "notification_email": "test@peer2.com" },
#        peer3: { address: "{{vpn_cloud_subnet}}.0.3", port: "51829", network: "{{vpn_cloud_subnet}}.3.0/24", host: "public.peer3.com", "notification_email": "test@peer3.com" }
    }
}

userdata: {
    daniel: { 
        name: "Olivian Daniel Tofan", 
        email: "daniel@toffee.ro",
        groups: [ "admin", "user" ], 
        telegram_bot: "home",    # used by openhab => reference to bot key in vault.yml
        phone_device: {                   # optional. will be used by device_ping role
          ip: "{{daniel_phone_ip}}", 
          timeout: 60 
        },
        openhab: {                        # used by openhab => reference to bot key in vault.yml
            state_item: "pOther_Presence_Daniel_State",
            notification_config: [ "telegram", "telegram:telegramBot:home" ],
        },
        vpn_gates: {                      # optional. will be used by wireguard_mobile role
          "phone": "{{vpn_mobile_subnet}}.11", 
          "laptop": "{{vpn_mobile_subnet}}.12" 
        },
        media_dir: {
          "test_media": "/"               # nextcloud user folder which is available via dlna (can be any nextcloud subfolder)
        },
        sip_endpoints: {
          "gate": "Hikvision DS-KD8003IME modular door station",
          "daniel": "Daniel Tofan softphone"
        }
    },
    alina: {
        name: "Alina Tofan", 
        email: "alina@toffee.ro", 
        groups: [ "user" ],
        phone_device: { 
          ip: "{{alina_phone_ip}}", 
          timeout: 60 
        },
        openhab: {                        # used by openhab => reference to bot key in vault.yml
            state_item: "pOther_Presence_Alina_State",
            notification_config: [ "telegram", "telegram:telegramBot:home" ],
        },
        vpn_gates: { 
          "phone": "{{vpn_mobile_subnet}}.13",
          "laptop": "{{vpn_mobile_subnet}}.14" 
        },
        sip_endpoints: {
          "alina": "Alina Tofan softphone"
        }
    },
    tudor: {
        name: "Tudor Tofan", 
        email: "tudor@toffee.ro", 
        groups: [ "user" ],
        phone_device: { 
          ip: "{{tudor_phone_ip}}", 
          timeout: 60 
        },
        openhab: {                        # used by openhab => reference to bot key in vault.yml
            state_item: "pOther_Presence_Tudor_State",
            notification_config: [ "telegram", "telegram:telegramBot:home" ],
        },
        vpn_gates: { 
          "phone": "{{vpn_mobile_subnet}}.15",
          "laptop": "{{vpn_mobile_subnet}}.16" 
        },
        sip_endpoints: {
          "tudor": "Tudor Tofan softphone"
        }
    },
    victor: {
        name: "Victor Tofan", 
        email: "victor@toffee.ro", 
        groups: [ "user" ],
        phone_device: { 
          ip: "{{victor_phone_ip}}", 
          timeout: 60 
        },
        openhab: {                        # used by openhab => reference to bot key in vault.yml
            state_item: "pOther_Presence_Victor_State",
            notification_config: [ "telegram", "telegram:telegramBot:home" ],
        },
        vpn_gates: { 
          "phone": "{{vpn_mobile_subnet}}.17",
          "laptop": "{{vpn_mobile_subnet}}.18" 
        },
        sip_endpoints: {
          "victor": "Victor Tofan softphone"
        }
    },
    lili: {
        name: "Liliana Radu", 
        email: "lili@toffee.ro", 
        groups: [ "user" ],
        phone_device: { 
          ip: "{{lili_phone_ip}}", 
          timeout: 60 
        },
        vpn_gates: { 
          "phone": "{{vpn_mobile_subnet}}.20"
        }
    },
    costache: {
        name: "Costache Tofan", 
        email: "costache@toffee.ro", 
        groups: [ "user" ],
        vpn_gates: {
          "tablet": "{{vpn_mobile_subnet}}.21",
          "phone": "{{vpn_mobile_subnet}}.22"
        }
    }
}

update_service_software_check_email:    "home@toffee.ro"    # sends a notification email after each check, if new software is available 
update_service_system_check_email:      "home@toffee.ro"    # sends a notification email after each check, if new smartserver deployment updates are available

netflow_collector: yes
#speedtest_server_id: "49516" # Internet Nord GmbH
#trusted_networks: []

network_devices: [
    {
       host: "{{default_server_subnet}}.1",
       name: "terminus",
       snmp_method: "v2c",
       snmp_community_string: "public",
       type: "openwrt",
       config: { roles: ["router"] }
    },
    {
       host: "{{default_server_subnet}}.3",
       name: "Switch",
       snmp_method: "v2c",
       snmp_community_string: "public"
    },
    {
       host: "{{default_server_subnet}}.4",
       name: "ds",
       snmp_method: "v2c",
       snmp_community_string: "public"
    },
    {
       host: "{{default_server_subnet}}.6",
       name: "ap-groundfloor",
       snmp_method: "v2c",
       snmp_community_string: "public"
    },
    {
       host: "{{default_server_subnet}}.7",
       name: "ap-firstfloor",
       snmp_method: "v2c",
       snmp_community_string: "public"
    },
    {
       host: "{{default_server_subnet}}.8",
       name: "ap-outdoor",
       snmp_method: "v2c",
       snmp_community_string: "public"
    },
    {
       host: "{{default_server_subnet}}.20",
       name: "securitas",
       snmp_method: "v2c",
       snmp_community_string: "public",
       type: "openwrt",
       config: { roles: ["ap"] }
    }
]

#traffic_blocker: { "default": yes },                        # enabled or disabled automatic ip blocking based on several decissions (additionally there must be a propper configured 'netflow_incoming_traffic' variable)
# 1. if suspicious traffic arrives the apache webserver => which traffic, can be configured in the variable 'netflow_incoming_traffic' and the attribute 'log'
# 2. if unexcpected traffic arrives the network  => which traffic, can be configured  in the variable 'netflow_incoming_traffic' and the attribute 'allowed'
#netflow_collector: { "default": no },                       # enable netflow collector in system_service
#netflow_incoming_traffic: { "default": [] },                # from internet expected and allowed traffic, (used to detect netflow traffic direction and for traffic blocker to decide which traffic is suspicious)
# *** EXAMPLE ***
# {
#   { target: "{{production_ip}}:80", name: "http", allowed: { hostname: [ ".+\\\\.internetnord\\\\.de", ".+letsencrypt\\\\.org" ] }, log="apache" }, # Letsencrypt, CLOUD PING Test
#   { target: "{{production_ip}}:10114", name: "alexa api", allowed: { org: [ "AWS EC2 .+" ] }, log="apache" }, # ALEXA
#   { target: "{{production_ip}}:51820", name: "wireguard", allowed: { wireguard_peers: [ "check" ] } }, # system check for connected wireguard peers
#   { target: "{{production_ip}}:456", name: "test", allowed: { ip: [ "185\\\\.89\\\\.36\\\\.[0-9]{1-3}" ] } }, # Fixed IP range test
# }
#
# *** Attibute Explanation ***
# 'logs' => "apache" means, traffic to this 'target' is additionally collected and analysed from apache logs
# 'allowed' => various regexes agains hostnames, org (ISP) or ip to mark traffic as normal. Type 'wireguard_peers' means the traffic ip is compared with active wireguard endpoints
# 'name' is just used as an identifier
# 'target' is a combination of the target ip and port number

# ****** OPTIONAL VARIABLES ******
# variables are optional and only necessary if they are referenced in one of the optional roles or configurations
# 
# openhab (external config) - used in custom external openhab config repository
# custom role 'apache_proxy' - used in custom role 'apache_proxy'
router_ip:                          "{{default_server_subnet}}.1"
switch_ip:                          "{{default_server_subnet}}.3"
ds_ip:                              "{{default_server_subnet}}.4"
ap1_ip:                             "{{default_server_subnet}}.6"
ap2_ip:                             "{{default_server_subnet}}.7"
lares_ip:                           "{{default_server_subnet}}.10"
wall_mounted_tablet_ip:             "{{default_server_subnet}}.11"      # {{authenticated_ip_addresses}}
securitas_ip:                       "{{default_server_subnet}}.20"
camera_01_ip:                       "{{default_server_subnet}}.51"
camera_02_ip:                       "{{default_server_subnet}}.52"
camera_03_ip:                       "{{default_server_subnet}}.53"
camera_04_ip:                       "{{default_server_subnet}}.54"
camera_07_ip:                       "{{default_server_subnet}}.57"
camera_09_ip:                       "{{default_server_subnet}}.59"
nodemcu_ip:                         "{{default_server_subnet}}.63"
roborock_ip:                        "{{default_server_subnet}}.64"
dishwasher_ip:                      "{{default_server_subnet}}.65"
oven_ip:                            "{{default_server_subnet}}.66"
weather_ip:                         "{{default_server_subnet}}.67"
moode_01_ip:                        "{{default_server_subnet}}.71"
moode_02_ip:                        "{{default_server_subnet}}.72"
huawei_tablet_ip:                   "{{default_server_subnet}}.81"      # {{authenticated_ip_addresses}}
huawei_tablet_wireless_ip:          "{{default_server_subnet}}.82"      # {{authenticated_ip_addresses}}
livingroom_tv_mac:                  "54:3a:d6:0c:b7:2b"
livingroom_tv_ip:                   "{{default_server_subnet}}.83"      # {{authenticated_ip_addresses}}
livingroom_tv_wireless_ip:          "{{default_server_subnet}}.84"      # {{authenticated_ip_addresses}}
tudor_tv_mac:                       "68:07:0A:25:E4:75"
tudor_tv_ip:                        "{{default_server_subnet}}.85"      # {{authenticated_ip_addresses}}
tudor_tv_wireless_ip:               "{{default_server_subnet}}.86"      # {{authenticated_ip_addresses}}
victor_tv_mac:                      "68:07:0A:24:B3:B3"
victor_tv_ip:                       "{{default_server_subnet}}.87"      # {{authenticated_ip_addresses}}
victor_tv_wireless_ip:              "{{default_server_subnet}}.88"      # {{authenticated_ip_addresses}}
daniel_phone_ip:                    "{{default_server_subnet}}.110"     # {{authenticated_ip_addresses}}
alina_phone_ip:                     "{{default_server_subnet}}.111"
tudor_phone_ip:                     "{{default_server_subnet}}.112"
victor_phone_ip:                    "{{default_server_subnet}}.113"
lili_phone_ip:                      "{{default_server_subnet}}.114"
knx_gateway_ip:                     "{{default_server_subnet}}.10"    # openhab (external config)

# ********************************
